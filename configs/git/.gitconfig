[core]
  editor = code --wait
[init]
	defaultBranch = main
[pull]
	rebase = false
[fetch]
	prune = false
[rebase]
	autoStash = false
[push]
	autoSetupRemote = true
[diff]
  tool = vscode
[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE
[merge]
  tool = vscode
[mergetool "vscode"]
  cmd = code --wait $MERGED
[color "status"]
	changed = cyan normal bold
	untracked = cyan normal bold
[alias]
	st = status
	br = branch -vv
	ch = checkout
	c = !git add -A && git commit -m
	last = log -1 HEAD
	lt = "!f() { git log --oneline --pretty=pretty --grep=''#$1''; }; f"
	lta = "!f() { git log --oneline --pretty=pretty --grep=''#$1'' --author=$2; }; f"
	lb = log --walk-reflogs
	rao = remote add origin
	cm = commit -m
	pushitgood = push -u origin --all
	lastw = log --since=1.weeks --oneline --pretty=pretty
	lastwa = log --since=1.weeks --oneline --author
	lg = log --color --graph --pretty=pretty --abbrev-commit
	rcp = "!f() { git log --since=$1.$2; }; f"
	rcn = "!f() { git log -n $1; }; f"
	exclude = !sh -c 'echo "$1" >> .git/info/exclude' -
	parent = "!git show-branch | grep '*' | grep -v \"$(git rev-parse --abbrev-ref HEAD)\" | head -n1 | sed 's/.*\\[\\(.*\\)\\].*/\\1/' | sed 's/[\\^~].*//' #"
	yeetsoft = "!f() { git reset --soft HEAD~$1; }; f"
	yeet = "!f() { git reset HEAD~$1; }; f"
	yeethard = "!f() { git reset --hard HEAD~$1; }; f"
[log]
	date = relative
[format]
    pretty = pretty
[pretty]
    pretty = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue) <%an> %Creset
[include]
	path = .gitconfig.local